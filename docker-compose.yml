version: "3.8"

services:
  app:
    build:
      context: .
    ports:
      - "3001:3001"
    volumes:
      - .:/app
      - /app/node_modules
    working_dir: /app
    command: node app.js
    depends_on:
      - postgres
      - minio
      - spark
      - airflow-webserver
      - mongodb
    environment:
      - PORT=3001
      - DATABASE_URL=postgres://postgres:password@postgres:5432/opencap
      - MONGODB_URI=mongodb://opencap:password123@opencap_mongodb:27017/opencap?authSource=admin
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
      - NODE_ENV=development
      - JWT_SECRET=test_secret
      - JWT_EXPIRATION=24h
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
      - EMAIL_FROM=noreply@opencap.local
      - VERIFY_EMAIL=true

  postgres:
    image: postgres:15-alpine
    container_name: opencap_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: opencap
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongodb:
    image: mongo:5.0
    container_name: opencap_mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: opencap
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: opencap
    volumes:
      - mongodb_data:/data/db
      - ./init-scripts/mongo:/docker-entrypoint-initdb.d

  minio:
    image: minio/minio:latest
    container_name: opencap_minio
    command: server /data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio_data:/data

  spark:
    image: bitnami/spark:latest
    container_name: opencap_spark
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8080
    ports:
      - "7077:7077"
      - "8080:8080"
    volumes:
      - spark_data:/opt/bitnami/spark

  spark-worker:
    image: bitnami/spark:latest
    container_name: opencap_spark_worker
    depends_on:
      - spark
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
    volumes:
      - spark_worker_data:/opt/bitnami/spark

  airflow-webserver:
    image: apache/airflow:2.7.2
    container_name: opencap_airflow_webserver
    restart: always
    command: webserver
    ports:
      - "8085:8080"
    depends_on:
      - airflow-scheduler
      - airflow-db
      - airflow-redis
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://airflow-redis:6379/0
      - AIRFLOW_UID=50000
    volumes:
      - airflow_data:/opt/airflow
      - ./dags:/opt/airflow/dags

  airflow-db:
    image: postgres:15-alpine
    container_name: opencap_airflow_db
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow_db_data:/var/lib/postgresql/data

  airflow-redis:
    image: redis:6-alpine
    container_name: opencap_airflow_redis
    restart: always
    ports:
      - "6379:6379"

  airflow-init:
    image: apache/airflow:2.7.2
    container_name: opencap_airflow_init
    depends_on:
      - airflow-db
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://airflow-redis:6379/0
      - _AIRFLOW_DB_UPGRADE=true
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=admin
      - _AIRFLOW_WWW_USER_EMAIL=admin@opencap.org
    entrypoint: /bin/bash
    command: -c "airflow db init && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@opencap.org && exit 0"

  mailhog:
    image: mailhog/mailhog:latest
    container_name: opencap_mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    restart: always

  airflow-scheduler:
    image: apache/airflow:2.7.2
    container_name: opencap_airflow_scheduler
    restart: always
    command: scheduler
    depends_on:
      - airflow-db
      - airflow-redis
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://airflow-redis:6379/0
      - AIRFLOW_UID=50000
    volumes:
      - airflow_data:/opt/airflow
      - ./dags:/opt/airflow/dags

volumes:
  postgres_data:
  minio_data:
  spark_data:
  spark_worker_data:
  airflow_data:
  airflow_db_data:
  mongodb_data:
