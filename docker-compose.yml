version: "3.8"

services:
  # Backend API Service
  app:
    build:
      context: .
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - backend_node_modules:/app/node_modules
    working_dir: /app
    command: sh -c "npm install && node app.js"
    depends_on:
      - postgres
      - mongodb
      - minio
      - spark
      - airflow-webserver
    environment:
      - DATABASE_URL=postgres://postgres:88bd0c19ffbace9ed508db3da6d49c97@postgres:5432/opencap
      - MONGODB_URI=mongodb://opencap:cfcb9ad70ddbadba456c906a16511ebe@mongodb:27017/opencap?authSource=admin
      - MONGODB_URI_TEST=mongodb://opencap:cfcb9ad70ddbadba456c906a16511ebe@mongodb:27017/opencap_test?authSource=admin
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=73b27ae78442e20fa0a61dc24b02bb97
      - NODE_ENV=development
      - PORT=5000
      - CORS_ORIGIN=http://localhost:5173

  # Frontend React Service
  frontend:
    build:
      context: ./frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:5000/api/v1
    depends_on:
      - app

  postgres:
    image: postgres:15-alpine
    container_name: opencap_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 88bd0c19ffbace9ed508db3da6d49c97
      POSTGRES_DB: opencap
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongodb:
    image: mongo:5.0
    container_name: opencap_mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: opencap
      MONGO_INITDB_ROOT_PASSWORD: cfcb9ad70ddbadba456c906a16511ebe
      MONGO_INITDB_DATABASE: opencap
    volumes:
      - mongodb_data:/data/db
      - ./init-scripts/mongo:/docker-entrypoint-initdb.d

  minio:
    image: minio/minio:latest
    container_name: opencap_minio
    command: server /data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: 73b27ae78442e20fa0a61dc24b02bb97
    volumes:
      - minio_data:/data

  spark:
    image: bitnami/spark:latest
    container_name: opencap_spark
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8080
    ports:
      - "7077:7077"
      - "8080:8080"
    volumes:
      - spark_data:/opt/bitnami/spark

  spark-worker:
    image: bitnami/spark:latest
    container_name: opencap_spark_worker
    depends_on:
      - spark
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
    volumes:
      - spark_worker_data:/opt/bitnami/spark

  airflow-webserver:
    image: apache/airflow:2.7.2
    container_name: opencap_airflow_webserver
    restart: always
    command: webserver
    ports:
      - "8085:8080"
    depends_on:
      - airflow-scheduler
      - airflow-db
      - airflow-redis
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:36d6de84cc59828496f4824665fd8325@airflow-db:5432/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:36d6de84cc59828496f4824665fd8325@airflow-db:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://airflow-redis:6379/0
      - AIRFLOW_UID=50000
    volumes:
      - airflow_data:/opt/airflow
      - ./dags:/opt/airflow/dags

  airflow-db:
    image: postgres:15-alpine
    container_name: opencap_airflow_db
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: 36d6de84cc59828496f4824665fd8325
      POSTGRES_DB: airflow
    volumes:
      - airflow_db_data:/var/lib/postgresql/data

  airflow-redis:
    image: redis:6-alpine
    container_name: opencap_airflow_redis
    restart: always
    ports:
      - "6379:6379"

  airflow-init:
    image: apache/airflow:2.7.2
    container_name: opencap_airflow_init
    depends_on:
      - airflow-db
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:36d6de84cc59828496f4824665fd8325@airflow-db:5432/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:36d6de84cc59828496f4824665fd8325@airflow-db:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://airflow-redis:6379/0
      - _AIRFLOW_DB_UPGRADE=true
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=36d6de84cc59828496f4824665fd8325
      - _AIRFLOW_WWW_USER_EMAIL=admin@opencap.org
    entrypoint: /bin/bash
    command: -c "airflow db init && airflow users create --username admin --password 36d6de84cc59828496f4824665fd8325 --firstname Admin --lastname User --role Admin --email admin@opencap.org && exit 0"

  airflow-scheduler:
    image: apache/airflow:2.7.2
    container_name: opencap_airflow_scheduler
    restart: always
    command: scheduler
    depends_on:
      - airflow-db
      - airflow-redis
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:36d6de84cc59828496f4824665fd8325@airflow-db:5432/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:36d6de84cc59828496f4824665fd8325@airflow-db:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://airflow-redis:6379/0
      - AIRFLOW_UID=50000
    volumes:
      - airflow_data:/opt/airflow
      - ./dags:/opt/airflow/dags

volumes:
  postgres_data:
  minio_data:
  spark_data:
  spark_worker_data:
  airflow_data:
  airflow_db_data:
  mongodb_data:
  backend_node_modules:
  frontend_node_modules:
